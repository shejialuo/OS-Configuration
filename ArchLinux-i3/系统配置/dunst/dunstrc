[global]
	# Specifies on which monitor the notifications should be displayed in, count starts at 0.
	# Default value: 0.
    monitor = 0

	# Defines where the notifications should be displayed in a multi-monitor setup. All values except none override the monitor setting.
    # values: [none/mouse/keyboard] default: none.
	follow = keyboard

    # The geometry of the window: [{width}]x{height}[+/-{x}+/-{y}]. default: "0x0+0-0"
	# width
	# The width of the notification window in pixels. A negative value sets the width to the srcreen width minus the absolute value of the width. If the width is omitted then the window expands to cover the whole screen. If width is 0, the window expands to the longest message being displayed.
	# height
	# The number of notifications that can appear at one time. When this limit is reached any additional notifications will be queued and displayed when the currently displayed ones either time out or are manually dismissed.
	# x/y
	# Repectively the horizontal and vertical offset in pixels from the corner of the screen that the notification should be drawn at. For x, a positive value is measured from the left of the screen while a negative one from the right. For y, a positive value is measured from the top while a negative from the bottom.
    geometry = "300x5-15+35"

	# If this is set to true,a notification indicating how many notifications are not being displayed due to the notification limit will be shown in place of the last notification slot.
    indicate_hidden = true

    # Shrink window if it's smaller than the width.
    shrink = false

    # The transparency of the window.Range: [0; 100]. The setting will only work if a compositor is running.
    transparency = 10

	# The minimum height of the notification window in pixels. If the text and padding cannot fit in within the height specified by this value, the height will be increased as needed.
    notification_height = 4

	# The height in pixels of the separator between notifications, if set to 0 there will be no separating line between notifications.
    separator_height = 2 

    # Padding between text and separator.
    padding = 2

    # Horizontal padding.
    horizontal_padding = 2

    # Defines width in pixels of frame around the notification window. Set to 0 to disable.
    frame_width = 2

    # Defines color of the frame around the notification window.
    frame_color = "#ADD8E6"

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input) for longer than idle_threshold seconds. Set to 0 to disable.
    idle_threshold = 120

	### Defines the font or font used. Optionaaly set the size as a decimal number after the font name and space.	
    font = sarasa 11

    # The spacing between lines.  If the height is smaller than the font height, it will get raised to the font height.
    line_height = 1

    # Defines how markup in notifications is handled.
	# It's important to note that markup in the format option will be parsed regardless of what this is set to.
	# full: allow a small subset of html markup in notifications. For a complete reference. see https://developer.gnome.org/pango/stable/pango-Markup.html.
	# strip: this setting is provided for compatibility with some broken clients that send markup even though it's not enabled on the server.
	# no: disable markup parsing, incoming notifications will be treated as plain text.
	markup = full

	# Specifies how the various atrributes of the notification should be formatted on then notification window.
    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    format = "<b>%s</b>\n%b"

    # Alignment of message text. Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon. Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines. Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = false

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = true

    ### Icons ###

    # Align icons left/right/off
    icon_position = off

    # Scale small icons up to this size, set to 0 to disable. Helpful for e.g. small files or high-dpi screens. In case of conflict, max_icon_size takes precedence over this.
    min_icon_size = 0

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 32

    # Paths to default icons.
    icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/:/usr/share/icons/hicolor/16x16/apps/

    ### History ###

    # Should a notification popped up from history be sticky or timeout as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###


    # Browser for opening urls in context menu.
    browser = /usr/bin/google-chrome-stable -new-tab

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = false

    # Manage dunst's desire for talking
    # Can be one of the following values:
    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    verbosity = mesg

    # Define the corner radius of the notification window in pixel size. If the radius is 0, you have no rounded corners.
    # The radius will be automatically lowered if it exceeds half of the notification height to avoid clipping text and/or icons.
    corner_radius = 0

    ignore_dbusclose = false

    ### Legacy

    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

[experimental]
    per_monitor_dpi = false

[shortcuts]

    # Close notification.
    close = ctrl+space

    # Close all notifications.
    close_all = ctrl+shift+space

    # Redisplay last message(s). On the US keyboard layout "grave" is normally above TAB and left
    history = ctrl+grave

    # Context menu.
    context = ctrl+shift+period

[urgency_low]

    background = "#181818"
    foreground = "#ffffff"
    timeout = 10

[urgency_normal]
    background = "#181818"
    foreground = "#ffffff"
    timeout = 10

[urgency_critical]
    background = "#181818"
    foreground = "#ffffff"
    timeout = 10
